{
  "": {
    "prefix": "cp",
    "body": [
      "#pragma GCC optimize(\"O3,unroll-loops\")",
      "",
      "#include <bits/stdc++.h>",
      "",
      "using namespace std;",
      "",
      "#define fast_cin() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL)",
      "#define ll long long",
      "#define ld long double",
      "#define nline \"\\n\"",
      "#define set_bits __builtin_popcountll",
      "",
      "template<typename T> inline T abs(T a){ return ((a < 0) ? -a : a); }",
      "template<typename T> inline T sqr(T a){ return a * a; }",
      "",
      "const int INF = (int)1e18;",
      "const ld EPS = 1e-9;",
      "const ld PI = 3.1415926535897932384626433832795;",
      "const int MOD = 1e9 + 7;",
      "",
      "/*------------------------------------------------------------------- short functions --------------------------------------------------------------------------*/",
      "",
      "ll gcd(ll a, ll b) {if (b > a) {return gcd(b, a);} if (b == 0) {return a;} return gcd(b, a % b);}",
      "ll lcm(ll a,ll b) { return a/gcd(a,b)*b; }",
      "string to_upper(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='a' && a[i]<='z') a[i]-='a'-'A'; return a; }",
      "string to_lower(string a) { for (int i=0;i<(int)a.size();++i) if (a[i]>='A' && a[i]<='Z') a[i]+='a'-'A'; return a; }",
      "ll expo(ll a, ll b, ll mod) {ll res = 1; while (b > 0) {if (b & 1)res = (res * a) % mod; a = (a * a) % mod; b = b >> 1;} return res;}",
      "void extendgcd(ll a, ll b, ll*v) {if (b == 0) {v[0] = 1; v[1] = 0; v[2] = a; return ;} extendgcd(b, a % b, v); ll x = v[1]; v[1] = v[0] - v[1] * (a / b); v[0] = x; return;}", //pass an arry of size1 3
      "ll mminv(ll a, ll b) {ll arr[3]; extendgcd(a, b, arr); return arr[0];}", //for non prime b
      "ll mminvprime(ll a, ll b) {return expo(a, b - 2, b);}",
      "bool revsort(ll a, ll b) {return a > b;}",
      "ll combination(ll n, ll r, ll m, ll *fact, ll *ifact) {ll val1 = fact[n]; ll val2 = ifact[n - r]; ll val3 = ifact[r]; return (((val1 * val2) % m) * val3) % m;}",
      "vector<ll> sieve(int n) {int*arr = new int[n + 1](); vector<ll> vect; for (int i = 2; i <= n; i++)if (arr[i] == 0) {vect.push_back(i); for (int j = 2 * i; j <= n; j += i)arr[j] = 1;} return vect;}",
      "ll mod_add(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a + b) % m) + m) % m;}",
      "ll mod_sub(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a - b) % m) + m) % m;}",
      "ll mod_div(ll a, ll b, ll m) {a = a % m; b = b % m; return (mod_mul(a, mminvprime(b, m), m) + m) % m;}",  //only for prime m
      "ll mod_mul(ll a, ll b, ll m) {a = a % m; b = b % m; return (((a * b) % m) + m) % m;}",
      "ll phin(ll n) {ll number = n; if (n % 2 == 0) {number /= 2; while (n % 2 == 0) n /= 2;} for (ll i = 3; i <= sqrt(n); i += 2) {if (n % i == 0) {while (n % i == 0)n /= i; number = (number / i * (i - 1));}} if (n > 1)number = (number / n * (n - 1)) ; return number;}",
      "bool prime(ll a) { if (a==1) return 0; for (int i=2;i<=round(sqrt(a));++i) if (a%i==0) return 0; return 1; }",
      "ll inv(ll i) {if (i == 1) return 1; return (MOD - ((MOD / i) * inv(MOD % i)) % MOD) % MOD;}",
      "ll ceil_div(ll a, ll b) {return a % b == 0 ? a / b : a / b + 1;}",
      // "void google(int t) {cout << \"Case #\" << t << \": \";}"
      "",
      "void solve(){",
      "    $0",
      "}",
      "",
      "int main()",
      "{",
      "    fast_cin();",
      "",
      "    int t;",
      "    cin>>t;",
      "    while(t--){",
      "        solve();",
      "    }",
      "",
      "    return 0;",
      "}"
    ],
    "description": ""
  },
  "ONLINE_JUDGE": {
    "prefix": "onlinejudge",
    "body": [
      "#ifndef ONLINE_JUDGE",
      "freopen(\"input.txt\",\"r\",stdin);",
      "freopen(\"output.txt\",\"w\",stdout);",
      "#endif"
    ],
    "description": ""
  },
  "Vector of Integers": {
    "prefix": "vi",
    "body": ["vector<int> $0"],
    "description": "Declare a vector<int>"
  },
  "Vector of long long Integers": {
    "prefix": "vll",
    "body": ["vector<long long> $0"],
    "description": "Declare a vector<long long>"
  },
  "Vector of pair of integers": {
    "prefix": "vpi",
    "body": ["vector<pair<int,int>> $0"],
    "description": "Declare a vector<pair<int,int>>"
  },
  "pair of integers": {
    "prefix": "pii",
    "body": ["pair<int,int> $0"],
    "description": "Declare a vector<pair<int,int>>"
  },
  "pair of long long integers": {
    "prefix": "pll",
    "body": ["pair<long,long> $0"],
    "description": "Declare a vector<pair<long,long>>"
  },
  "Vector of Vector of Integers": {
    "prefix": "vvi",
    "body": ["vector<vector<int>> $0"],
    "description": "Declare a vector<vector<int>>"
  },
  "map": {
    "prefix": "mii",
    "body": ["map<int,int> $0"],
    "description": "Declare a map<int,int>"
  },
  "set of integers": {
    "prefix": "si",
    "body": ["set<int> $0"],
    "description": "Declare a set<int>"
  },
  "set of characters": {
    "prefix": "sc",
    "body": ["set<char> $0"],
    "description": "Declare a set<char>"
  },
  "for loop: i from 0 to n-1": {
    "prefix": "fori0",
    "body": ["for (int i = 0; i < n; i++)\n{", "\t$0", "}"],
    "description": "Create a for loop with i ranging from 0 to n-1"
  },
  "for loop: i from 1 to n": {
    "prefix": "fori1",
    "body": ["for (int i = 1; i <= n; i++)\n{", "\t$0", "}"],
    "description": "Create a for loop with i ranging from 1 to n"
  },
  "for loop: i from n-1 to 0": {
    "prefix": "ford0",
    "body": ["for (int i = n - 1; i >= 0; i--)\n{", "\t$0", "}"],
    "description": "Create a for loop with i ranging from n-1 to 0"
  },
  "for loop: j from 0 to n-1": {
    "prefix": "forj0",
    "body": ["for (int j = 0; j < n; j++)\n{", "\t$0", "}"],
    "description": "Create a for loop with j ranging from 0 to n-1"
  },
  "for loop: j from 1 to n": {
    "prefix": "forj1",
    "body": ["for (int j = 1; j <= n; j++)\n{", "\t$0", "}"],
    "description": "Create a for loop with j ranging from 1 to n"
  },
  "for loop: k from 0 to n-1": {
    "prefix": "fork0",
    "body": ["for (int k = 0; k < n; k++)\n{", "\t$0", "}"],
    "description": "Create a for loop with k ranging from 0 to n-1"
  },
  "for loop: k from 1 to n": {
    "prefix": "fork1",
    "body": ["for (int k = 1; k <= n; k++)\n{", "\t$0", "}"],
    "description": "Create a for loop with k ranging from 1 to n"
  }
}
